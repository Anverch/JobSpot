import React from 'react';
import Transition from '../Transition';
/**
 * Wraps a React element with a Transition component.
 *
 * @param {React.ReactElement} child
 * @param {Function} onHide
 * @param {Object} [options={}]
 * @param {String} [options.animation]
 * @param {Number} [options.duration]
 * @param {Boolean} [options.directional]
 * @param {Boolean} [options.transitionOnMount=false]
 * @param {Boolean} [options.visible=true]
 */

export default function wrapChild(child, onHide) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var key = child.key;
  var animation = options.animation,
      directional = options.directional,
      duration = options.duration,
      _options$transitionOn = options.transitionOnMount,
      transitionOnMount = _options$transitionOn === void 0 ? false : _options$transitionOn,
      _options$visible = options.visible,
      visible = _options$visible === void 0 ? true : _options$visible;
  return /*#__PURE__*/React.createElement(Transition, {
    animation: animation,
    directional: directional,
    duration: duration,
    key: key,
    onHide: onHide,
    reactKey: key,
    transitionOnMount: transitionOnMount,
    visible: visible
  }, child);
}
wrapChild.handledProps = [];